#!/bin/sh

tmp=

cleanup() {
	rm -f "$tmp"
}

die() {
	echo "$*" 1>&2
	exit 1
}

help() {
	cat <<EOF
Usage: $0 TYPE EXECUTABLE
Get compiler information

  TYPE: compiler type (c, cxx)
  EXECUTABLE: compiler executable to use
EOF
}

ccinfo() {
	tmp="$(mktemp)"
	cat <<EOF >"$tmp"
#if defined(__clang__)
Clang __clang_major__ __clang_minor__ __clang_patchlevel__
#elif defined(__GNUC__)
GCC __GNUC__ __GNUC_MINOR__ __GNUC_PATCHLEVEL__
#else
#error unknown compiler
#endif
EOF
	info="$("$2" -E -P -x "$1" -o- "$tmp")" || return $?
	info="$(printf '%s\n' "$info" | tail -1)"

	name="$(echo "$info" | cut -f1 -d' ')"
	major="$(echo "$info" | cut -f2 -d' ')"
	minor="$(echo "$info" | cut -f3 -d' ')"
	patch="$(echo "$info" | cut -f4 -d' ')"
	printf '%s %s.%s.%s\n' "$name" "$major" "$minor" "$patch"
}

trap cleanup EXIT

if [ "${1-}" = '-h' ] || [ "${1-}" = '--help' ]; then
	help
	exit 0
fi

if [ "$#" -ne 2 ]; then
	help 1>&2
	exit 1
fi

t="$1"
comp="$2"

case "$t" in
c) ccinfo c "$comp" || die "cannot detect c compiler";;
cxx) ccinfo c++ "$comp" || die "cannot detect c++ compiler";;
*) die "invalid compiler type: $t";;
esac
